security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\User\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            stateless: false
        test:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            stateless: false

        login:
            pattern: ^/api/user/login
            user_checker: App\Security\UserChecker
            stateless: true
            json_login:
                username_path: email
                check_path: /api/user/login
                #user_checker: App\Security\UserChecker
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            custom_authenticators:
                - app.json_login_authenticator

        api_token_refresh:
            pattern: ^/api/auth/token/refresh
            stateless: true
            refresh_jwt:
                check_path: /api/auth/token/refresh

        api:
            pattern: ^/api/.*
            stateless: true
            jwt:
                authenticator: app.jwt_authenticator

    access_control:
        - { path: ^/api/auth/token/refresh, roles: PUBLIC_ACCESS }
        - { path: ^/api/private/.*, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: PUBLIC_ACCESS }
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

#when@test:
#    security:
#        password_hashers:
#            # By default, password hashers are resource intensive and take time. This is
#            # important to generate secure password hashes. In tests however, secure hashes
#            # are not important, waste resources and increase test times. The following
#            # reduces the work factor to the lowest possible values.
#            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                algorithm: plaintext
